{"ast":null,"code":"var _jsxFileName = \"/home/hasan/Desktop/portfoliopro/src/components/work/Works.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { projectsData } from \"./Data\";\nimport { projectsNav } from \"./Data\";\nimport WorkItems from \"./WorkItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Works = () => {\n  _s();\n  const [item, setItem] = useState({\n    name: \"all\"\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? `active-work` : \"\"}work__item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(WorkItems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Works, \"RDfNlG8mJnbc4U5h8vCvotiVTnk=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useEffect","useState","projectsData","projectsNav","WorkItems","jsxDEV","_jsxDEV","Works","_s","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","handleClick","e","index","target","textContent","children","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/hasan/Desktop/portfoliopro/src/components/work/Works.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { projectsData } from \"./Data\";\nimport { projectsNav } from \"./Data\";\nimport WorkItems from \"./WorkItems\";\n\nconst Works = () => {\n  const [item, setItem] = useState({ name: \"all\" });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n\n  useEffect(() => {\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter((project) => {\n        return project.category === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n\n  const handleClick = (e, index) => {\n    setItem({ name: e.target.textContent });\n  };\n  return (\n    <div>\n      <div className=\"work__filters\">\n        {projectsNav.map((item, index) => {\n          return (\n            <span\n              onClick={(e) => {\n                handleClick(e, index);\n              }}\n              className={`${active === index ? `active-work` : \"\"}work__item`}\n              key={index}>\n              {item.name}\n            </span>\n          );\n        })}\n      </div>\n\n      <div className=\"work__container container grid\">\n        {projects.map((item) => {\n          return <WorkItems item={item} key={item.id} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Works;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE;EAAM,CAAC,CAAC;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,CAACE,IAAI,KAAK,KAAK,EAAE;MACvBE,WAAW,CAACX,YAAY,CAAC;IAC3B,CAAC,MAAM;MACL,MAAMc,WAAW,GAAGd,YAAY,CAACe,MAAM,CAAEC,OAAO,IAAK;QACnD,OAAOA,OAAO,CAACC,QAAQ,KAAKV,IAAI,CAACE,IAAI;MACvC,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IAC1B;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMW,WAAW,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IAChCZ,OAAO,CAAC;MAAEC,IAAI,EAAEU,CAAC,CAACE,MAAM,CAACC;IAAY,CAAC,CAAC;EACzC,CAAC;EACD,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAC3BtB,WAAW,CAACwB,GAAG,CAAC,CAAClB,IAAI,EAAEa,KAAK,KAAK;QAChC,oBACEhB,OAAA;UACEsB,OAAO,EAAGP,CAAC,IAAK;YACdD,WAAW,CAACC,CAAC,EAAEC,KAAK,CAAC;UACvB,CAAE;UACFI,SAAS,EAAG,GAAEZ,MAAM,KAAKQ,KAAK,GAAI,aAAY,GAAG,EAAG,YAAY;UAAAG,QAAA,EAE/DhB,IAAI,CAACE;QAAI,GADLW,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1B,OAAA;MAAKoB,SAAS,EAAC,gCAAgC;MAAAD,QAAA,EAC5Cb,QAAQ,CAACe,GAAG,CAAElB,IAAI,IAAK;QACtB,oBAAOH,OAAA,CAACF,SAAS;UAACK,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACwB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAChD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3CID,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}